// <auto-generated />
using System;
using Ecommerce.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Ecommerce.Infrastructure.Data.Migrations
{
    [DbContext(typeof(AppDBContext))]
    partial class AppDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Ecommerce.Core.Entities.Product.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 6, 12, 20, 4, 24, 657, DateTimeKind.Local).AddTicks(4776),
                            Description = "Devices and gadgets",
                            IsDeleted = false,
                            Name = "Electronics",
                            UpdatedAt = new DateTime(2025, 6, 12, 20, 4, 24, 658, DateTimeKind.Local).AddTicks(8770)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 6, 12, 20, 4, 24, 658, DateTimeKind.Local).AddTicks(9564),
                            Description = "Apparel and accessories",
                            IsDeleted = false,
                            Name = "Clothing",
                            UpdatedAt = new DateTime(2025, 6, 12, 20, 4, 24, 658, DateTimeKind.Local).AddTicks(9568)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 6, 12, 20, 4, 24, 658, DateTimeKind.Local).AddTicks(9570),
                            Description = "Literature and educational materials",
                            IsDeleted = false,
                            Name = "Books",
                            UpdatedAt = new DateTime(2025, 6, 12, 20, 4, 24, 658, DateTimeKind.Local).AddTicks(9571)
                        });
                });

            modelBuilder.Entity("Ecommerce.Core.Entities.Product.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("Ecommerce.Core.Entities.Product.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2025, 6, 12, 20, 4, 24, 659, DateTimeKind.Local).AddTicks(8626),
                            Description = "High performance laptop",
                            IsDeleted = false,
                            Name = "Laptop",
                            Price = 999.99m,
                            UpdatedAt = new DateTime(2025, 6, 12, 20, 4, 24, 659, DateTimeKind.Local).AddTicks(8646)
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2025, 6, 12, 20, 4, 24, 659, DateTimeKind.Local).AddTicks(9364),
                            Description = "Latest model smartphone",
                            IsDeleted = false,
                            Name = "Smartphone",
                            Price = 699.99m,
                            UpdatedAt = new DateTime(2025, 6, 12, 20, 4, 24, 659, DateTimeKind.Local).AddTicks(9366)
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2025, 6, 12, 20, 4, 24, 659, DateTimeKind.Local).AddTicks(9368),
                            Description = "Comfortable cotton t-shirt",
                            IsDeleted = false,
                            Name = "T-Shirt",
                            Price = 19.99m,
                            UpdatedAt = new DateTime(2025, 6, 12, 20, 4, 24, 659, DateTimeKind.Local).AddTicks(9369)
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2025, 6, 12, 20, 4, 24, 659, DateTimeKind.Local).AddTicks(9370),
                            Description = "Stylish denim jeans",
                            IsDeleted = false,
                            Name = "Jeans",
                            Price = 49.99m,
                            UpdatedAt = new DateTime(2025, 6, 12, 20, 4, 24, 659, DateTimeKind.Local).AddTicks(9371)
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2025, 6, 12, 20, 4, 24, 659, DateTimeKind.Local).AddTicks(9372),
                            Description = "Engaging fiction novel",
                            IsDeleted = false,
                            Name = "Fiction Book",
                            Price = 14.99m,
                            UpdatedAt = new DateTime(2025, 6, 12, 20, 4, 24, 659, DateTimeKind.Local).AddTicks(9373)
                        });
                });

            modelBuilder.Entity("Ecommerce.Core.Entities.Product.Photo", b =>
                {
                    b.HasOne("Ecommerce.Core.Entities.Product.Product", "Product")
                        .WithMany("Photos")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Ecommerce.Core.Entities.Product.Product", b =>
                {
                    b.HasOne("Ecommerce.Core.Entities.Product.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Ecommerce.Core.Entities.Product.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Ecommerce.Core.Entities.Product.Product", b =>
                {
                    b.Navigation("Photos");
                });
#pragma warning restore 612, 618
        }
    }
}
