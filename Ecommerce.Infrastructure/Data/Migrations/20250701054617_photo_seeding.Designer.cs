// <auto-generated />
using System;
using Ecommerce.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Ecommerce.Infrastructure.Data.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20250701054617_photo_seeding")]
    partial class photo_seeding
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Ecommerce.Core.Entities.Product.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 7, 1, 8, 46, 15, 986, DateTimeKind.Local).AddTicks(2223),
                            Description = "Electronic items",
                            IsDeleted = false,
                            Name = "Electronics",
                            UpdatedAt = new DateTime(2025, 7, 1, 8, 46, 15, 987, DateTimeKind.Local).AddTicks(7165)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 7, 1, 8, 46, 15, 987, DateTimeKind.Local).AddTicks(7914),
                            Description = "Apparel and garments",
                            IsDeleted = false,
                            Name = "Clothing",
                            UpdatedAt = new DateTime(2025, 7, 1, 8, 46, 15, 987, DateTimeKind.Local).AddTicks(7917)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 7, 1, 8, 46, 15, 987, DateTimeKind.Local).AddTicks(7919),
                            Description = "Various genres of books",
                            IsDeleted = false,
                            Name = "Books",
                            UpdatedAt = new DateTime(2025, 7, 1, 8, 46, 15, 987, DateTimeKind.Local).AddTicks(7920)
                        });
                });

            modelBuilder.Entity("Ecommerce.Core.Entities.Product.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Photos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 7, 1, 8, 46, 15, 988, DateTimeKind.Local).AddTicks(8558),
                            ImageName = "Laptop",
                            IsDeleted = false,
                            ProductId = 1,
                            UpdatedAt = new DateTime(2025, 7, 1, 8, 46, 15, 988, DateTimeKind.Local).AddTicks(8579)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 7, 1, 8, 46, 15, 988, DateTimeKind.Local).AddTicks(9702),
                            ImageName = "Mobile",
                            IsDeleted = false,
                            ProductId = 2,
                            UpdatedAt = new DateTime(2025, 7, 1, 8, 46, 15, 988, DateTimeKind.Local).AddTicks(9704)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 7, 1, 8, 46, 15, 988, DateTimeKind.Local).AddTicks(9705),
                            ImageName = "Tablet",
                            IsDeleted = false,
                            ProductId = 3,
                            UpdatedAt = new DateTime(2025, 7, 1, 8, 46, 15, 988, DateTimeKind.Local).AddTicks(9706)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 7, 1, 8, 46, 15, 988, DateTimeKind.Local).AddTicks(9707),
                            ImageName = "Headphone",
                            IsDeleted = false,
                            ProductId = 4,
                            UpdatedAt = new DateTime(2025, 7, 1, 8, 46, 15, 988, DateTimeKind.Local).AddTicks(9708)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 7, 1, 8, 46, 15, 988, DateTimeKind.Local).AddTicks(9709),
                            ImageName = "Smartwatch",
                            IsDeleted = false,
                            ProductId = 5,
                            UpdatedAt = new DateTime(2025, 7, 1, 8, 46, 15, 988, DateTimeKind.Local).AddTicks(9710)
                        });
                });

            modelBuilder.Entity("Ecommerce.Core.Entities.Product.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2025, 7, 1, 8, 46, 15, 989, DateTimeKind.Local).AddTicks(4758),
                            Description = "High performance laptop",
                            IsDeleted = false,
                            Name = "Laptop",
                            Price = 999.99m,
                            UpdatedAt = new DateTime(2025, 7, 1, 8, 46, 15, 989, DateTimeKind.Local).AddTicks(4767)
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2025, 7, 1, 8, 46, 15, 989, DateTimeKind.Local).AddTicks(5403),
                            Description = "Latest model smartphone",
                            IsDeleted = false,
                            Name = "Smartphone",
                            Price = 699.99m,
                            UpdatedAt = new DateTime(2025, 7, 1, 8, 46, 15, 989, DateTimeKind.Local).AddTicks(5405)
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2025, 7, 1, 8, 46, 15, 989, DateTimeKind.Local).AddTicks(5407),
                            Description = "Comfortable cotton t-shirt",
                            IsDeleted = false,
                            Name = "T-Shirt",
                            Price = 19.99m,
                            UpdatedAt = new DateTime(2025, 7, 1, 8, 46, 15, 989, DateTimeKind.Local).AddTicks(5408)
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2025, 7, 1, 8, 46, 15, 989, DateTimeKind.Local).AddTicks(5409),
                            Description = "Stylish denim jeans",
                            IsDeleted = false,
                            Name = "Jeans",
                            Price = 49.99m,
                            UpdatedAt = new DateTime(2025, 7, 1, 8, 46, 15, 989, DateTimeKind.Local).AddTicks(5410)
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2025, 7, 1, 8, 46, 15, 989, DateTimeKind.Local).AddTicks(5412),
                            Description = "Engaging fiction novel",
                            IsDeleted = false,
                            Name = "Fiction Book",
                            Price = 14.99m,
                            UpdatedAt = new DateTime(2025, 7, 1, 8, 46, 15, 989, DateTimeKind.Local).AddTicks(5412)
                        });
                });

            modelBuilder.Entity("Ecommerce.Core.Entities.Product.Photo", b =>
                {
                    b.HasOne("Ecommerce.Core.Entities.Product.Product", null)
                        .WithMany("Photos")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Ecommerce.Core.Entities.Product.Product", b =>
                {
                    b.HasOne("Ecommerce.Core.Entities.Product.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Ecommerce.Core.Entities.Product.Product", b =>
                {
                    b.Navigation("Photos");
                });
#pragma warning restore 612, 618
        }
    }
}
